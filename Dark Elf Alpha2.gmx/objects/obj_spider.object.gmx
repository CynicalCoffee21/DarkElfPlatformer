<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_spider_left_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enum states
{
 idle,
 chase
 }
 
hspeed = -2;
current_state = states.idle;
view_range = 640;
chase_range = 60;
chase_speed = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Chase
if (current_state == states.chase)
{
  if (Hero.x &lt; obj_spider.x)
  {
    hspeed = -4;
    if (obj_spider.x-25 &lt;= 192 &amp;&amp; hspeed &lt; 0 )
    {
      hspeed = 0;
    }
  } else if (Hero.x &gt; obj_spider.x)
  {
    hspeed = 4;
    if (obj_spider.x+3 &gt;= 960 &amp;&amp; hspeed &gt; 0 )
    {
      hspeed = 0;
    }
  }
  
  if (distance_to_point(Hero.x, Hero.y) &lt; chase_range)
  {
    current_state = states.idle;
  }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Idle
/*for(i = 0; i &lt; instance_number(cave_floor); i++)
{
  cave_floors[i] = instance_find(cave_floor, i);
}*/

if (current_state == states.idle)
{
  for(i=0;i&lt;instance_number(cave_floor);i++)
  {
    if(place_meeting(obj_spider.x,obj_spider.y+5, Hero.cave_floors[i]))
    {
    vspeed = 0;
    
    y = Hero.cave_floors[i].y+62;
    show_debug_message("herp")
    } else
    {
    show_debug_message("Derp")
      vspeed += .6;
    }
  }
  
  /*for(i = 0; i &lt; instance_number(cave_floor); i++)
  {
    //show_debug_message("Cave floor x = " + string(instance_number(cave_floor).bbox_left + 1));
    //show_debug_message("Cave floor x = " + string(instance_number(cave_floor).bbox_right - 1));
    //show_debug_message("Spider x = " + string(obj_spider.x));*/
    if (obj_spider.x-25 &lt;= 192 &amp;&amp; hspeed &lt; 0 )
    {
      hspeed = 0;
      hspeed = 2; 
    } else if (obj_spider.x+3 &gt;= 960 &amp;&amp; hspeed &gt; 0 )
    {
      hspeed = 0;
      hspeed = -2; 
    }
  
  
  if (distance_to_point(Hero.x, Hero.y) &lt; view_range)
  {
    current_state = states.chase;
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
